#version 400

layout (point) in;
layout (points) out;
layout (max_vertices = 30) out;

in float Type0[];
in vec3 Position0[];
in vec3 Velocity0[];
in float Age0[];

out float Type1;
out vec3 Position1;
out vec3 Velocity1;
out float Age1;

uniform float gDeltaTimeMillis;
uniform float gTime;
uniform sampler1D gRandomTexture;
uniform float gLauncherLifetime;
uniform float gShellLifetime;
uniform float gSecondaryShellLifetime;

#define PARTICLE_TYPE_LAUNCHER 0.0f
#define PARTICLE_TYPE_SHELL 1.0f
#define PARTICLE_TYPE_SECONDARY_SHELL 2.0f

//------function declaring------
vec3 getRandomDir(float texCoord);

void main()
{
	float age = Age0[0] + gDeltaTimeMillis;

	if(Type0[0] == PARTICLE_TYPE_LAUNCHER)
	{
		//setup next particle's attribs
		if(age >= gLauncherLifetime)	//first shell
		{
			Type1 = PARTICLE_TYPE_SHELL;
			Position1 = Position0[0];
			//divided by 1000 => sec
			vec3 dir = getRandomDir(gTime/ 1000.0);	
			dir.y = max(dir.y, 0.5f);
			Velocity1 = normalize(dir)/ 20.0;
			Age1 = 0.0;
			EmitVertex();
			EndPrimitive();
			Age = 0.0;
		}

		Type1 = PARTICLE_TYPE_LAUNCHER;
		Position1 = Position0[0];
		Velocity1 = Velocity0[0];
		Age1 = Age;
		EmitVertex();
		EndPrimitive();
	}
	else
	{
		float deltaTimeSecs = gDeltaTimeMillis/1000.0;
		float t1 = Age0[0] / 1000.0;
		float t2 = Age / 1000.0;
		vec3 deltaP = deltaTimeSecs * Velocity0[0];
		
	}
}

vec3 getRandomDir(float texCoord)
{
	vec3 dir = texture(gRandomTexture, texCoord).xyz;
	dir -= vec3(0.5f, 0.5f, 0.5f);
	return dir;
}

